.point-actor {
	position: absolute;
	left: calc(1px * var(--x));
	top: calc(1px * var(--y));
}

.point-actor.actor-generic {
	background: red;
	width: 1px;
	height: 1px;
	position: absolute;
	left: calc(1px * var(--x));
	top: calc(1px * var(--y));
	box-shadow: 0 0 4px 4px rgba(0,255,0,0.45);
}

.point-actor.actor-generic[data-colliding=true] {
	box-shadow: 0 0 4px 4px rgba(0,255,255,0.45);
}

.actor-generic {
	z-index: 1;
}

.actor-generic .sprite:after {
	filter: invert(25%) brightness(200%) sepia(100%) hue-rotate(100deg) saturate(200%);
	display: block;
	position: absolute;
	content: ' ';
	background-image: url(/debug/arrow-east.svg);
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
	width: 20px;
	height: 20px;
	z-index: 1000;
	top: 0;
	left: 0;
	--translate: translate(5px, calc(-50%));
	transform-origin: -5px 50%;
	transform: var(--translate) rotate(calc(0deg + calc(1rad * var(--display-angle))));
	opacity: 0.75;
}

.actor-generic {
	transition: transform 0.1s ease-out 0.1s;
}

.actor-generic[data-camera-mode="aerial"] {
	transform: scale(1.25);
}

.actor-generic[data-falling="false"][data-mode="0"] .sprite:after {
	transform: var(--translate) rotate(calc(0deg - calc(1rad * var(--display-angle))));
}

.actor-generic[data-falling="false"][data-mode="1"] .sprite:after {
	transform: var(--translate) rotate(calc(90deg - calc(1rad * var(--display-angle))));
}

.actor-generic[data-falling="false"][data-mode="2"] .sprite:after {
	transform: var(--translate) rotate(calc(180deg - calc(1rad * var(--display-angle))));
}

.actor-generic[data-falling="false"][data-mode="3"] .sprite:after {
	transform: var(--translate) rotate(calc(270deg - calc(1rad * var(--display-angle))));
}

.actor-generic[data-falling="false"][data-mode="0"][data-facing="left"] .sprite:after {
	transform: var(--translate) rotate(calc(180deg - calc(1rad * var(--display-angle))));
}

.actor-generic[data-falling="false"][data-mode="1"][data-facing="left"] .sprite:after {
	transform: var(--translate) rotate(calc(270deg - calc(1rad * var(--display-angle))));
}

.actor-generic[data-falling="false"][data-mode="2"][data-facing="left"] .sprite:after {
	transform: var(--translate) rotate(calc(0deg - calc(1rad * var(--display-angle))));
}

.actor-generic[data-falling="false"][data-mode="3"][data-facing="left"] .sprite:after {
	transform: var(--translate) rotate(calc(90deg - calc(1rad * var(--display-angle))));
}

.actor-item .sprite {
	content: ' ';
	font-size: 0.25rem;
	color: black;
	text-align: center;
	position: absolute;
	top: 0;
	left: 0;
	height: calc(1px * var(--height));
	width: calc(1px * var(--width));
	transform-origin: center bottom;
	box-shadow: none;
	background-repeat: no-repeat;
}

.actor-item.actor-block-marble .sprite {
	background-image: url(/Sonic/marble-zone-block.png);
	width: 32px;
	height: 32px;
}

.actor-item.actor-explosion .sprite {
	background-image: url(/Sonic/explosion.png);
	--sprite-offset-x: -8px;
	--sprite-offset-y: -64px;
	width: 48px;
	height: 48px;

	animation: explosion steps(5) infinite;
	animation-duration: calc(1ms * 480);

	z-index: 20000;
}

.actor-item.actor-ring .sprite {
	background-image: url(/Sonic/rings.png);
	--sprite-offset-x: -16px;
	--sprite-offset-y: -148px;
	animation: ringSpin steps(4) infinite;
	animation-duration: calc(1ms * 320);
	transition: opacity 0.25s ease-in;
}

.actor-item.actor-emerald .sprite {
	background-image: url(/Sonic/emerald-white.png);
}

.actor-item.actor-ring.gone .sprite,
.actor-item.actor-ring.collected .sprite {
	--sprite-offset-y: -84px;
	animation: ringTwinkle steps(4) infinite;
	animation-duration: calc(1ms * 140);
}


.actor-item.actor-coin .sprite {
	background-image: url(/mario/coins.png);
	--sprite-offset-x: -16px;
	--sprite-offset-y: -16px;
	animation: ringSpin steps(4) infinite;
	animation-duration: calc(1ms * 350);
	transition: opacity 0.5s ease-out, top 0.25s ease-in, filter 0.5s ease-in;
}

.actor-item.actor-coin.gone .sprite,
.actor-item.actor-coin.collected .sprite {
	animation-duration: calc(1ms * 15);
	--sprite-offset-y: -82px;
	top: -40px;
}

.actor-item.actor-coin.gone .sprite {
	animation: coinTwinkle steps(6) infinite;
	animation-duration: calc(1ms * 15);
}

.actor-item.actor-ring.gone .sprite {
	opacity: 0;
	filter: brightness(5);
}

.actor-item.actor-monitor .sprite {
	background-image: url(/Sonic/ringMonitor.png);
	--sprite-offset-x: -18px;
	--sprite-offset-y: -13px;
	animation: monitor-flicker steps(4) infinite;
	animation-duration: calc(1ms * 480);
}

.actor-item.actor-monitor.actor-monitor-broken .sprite {
	background-image: url(/Sonic/brokenMonitor.png);
	background-position: var(--sprite-offset-x) var(--sprite-offset-y);
 	--sprite-offset-x: -18px;
	--sprite-offset-y: -12px;
	animation: none;
}

.actor-item.actor-question-block .sprite {
	background-image: url(/Sonic/question-block.png);
	--sprite-offset-x: -16px;
	--sprite-offset-y: -13px;
	animation: monitor-flicker steps(4) infinite;
	animation-duration: calc(1ms * 480);
}

.actor-item.actor-question-block[data-empty="true"] .sprite {
	background-image: url(/Sonic/question-block.png);
	--sprite-offset-x: -16px;
	--sprite-offset-y: -76px;
	background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	animation: none;
}

.actor-item.actor-window .sprite {
	background-image: url(/castlevania/window.png);
}

.actor-item.actor-star-post .sprite {
	background-image: url(/Sonic/star-post.png);
	height: 48px;
	width: 16px;
}

.actor-star-post {
	z-index:1;
}

.star-post-head {
	background-image: url(/Sonic/star-post-head.png);
	width: 16px;
	height: 16px;
	position: absolute;
	top: -60px;
	left: -8px;
	transform-origin: bottom center;
	--sprite-offset-x: 0px;
	--sprite-offset-y: 0px;
}

.actor-star-post[data-active="true"] .star-post-head {
	animation: spin2x 1 ease-in-out 0.75s both, starPostActive steps(2) 10ms  0.5s infinite;
}

.actor-star-post[data-active="true"][direction="-1"] .star-post-head {
	animation-direction: reverse;
}

.actor-item.actor-star-post .sprite {
	background-image: url(/Sonic/star-post.png);
	height: 48px;
	width: 16px;
}

.actor-item[data-mode="0"] .sprite {
	transform: translate(-50%, calc(-100% + 1px));
}

.actor-item[data-falling="false"][data-mode="0"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) rotate(calc(-1rad * var(--display-angle)));
}

.actor-item[data-falling="false"][data-mode="1"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) rotate(calc( calc(-1rad * var(--display-angle) + 90deg)));
}

.actor-item[data-falling="false"][data-mode="2"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) rotate(calc( calc(-1rad * var(--display-angle) + 180deg)));
}

.actor-item[data-falling="false"][data-mode="3"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) rotate(calc( calc(-1rad * var(--display-angle) + 270deg)));
}

.actor-item[data-falling="false"][data-mode="0"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) rotate(calc(-1rad * var(--display-angle))) scale(-1,1);
}

.actor-item[data-falling="false"][data-mode="1"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) rotate(calc( calc(-1rad * var(--display-angle) + 90deg))) scale(-1,1);
}

.actor-item[data-falling="false"][data-mode="2"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) rotate(calc( calc(-1rad * var(--display-angle) + 180deg))) scale(-1,1);
}

.actor-item[data-falling="false"][data-mode="3"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) rotate(calc( calc(-1rad * var(--display-angle) + 270deg))) scale(-1,1);
}

.actor-item[data-mode="0"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) scale(-1,1);
}

.actor-item[data-mode="1"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) scale(-1,1);
}

.actor-item[data-mode="2"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) scale(-1,1);
}

.actor-item[data-mode="3"][data-facing="left"] .sprite {
	transform: translate(-50%, calc(-100% + 1px)) scale(-1,1);
}

.actor-item {
	position: relative;
}

.actor-item:before {
	box-sizing: border-box;
	content: ' ';
	transform: translate(-50%, calc(-100% + 1px));
	position: absolute;
	top: 0px;
	left: 0px;
	height: calc(1px + calc(1px * var(--height)));
	width: calc(2px + calc(1px * var(--width)));
}

.actor-item[data-colliding="true"]:before {
	--collColor: rgba(0,255,255,0.15);
	z-index: 10;
}

.actor-item.collision-top:before {
	border-top: 4px solid var(--collColor);
	top: 0px
}
.actor-item.collision-left:before {
	border-left: 4px solid var(--collColor);
}
.actor-item.collision-bottom:before {
	border-bottom: 4px solid var(--collColor);
}
.actor-item.collision-right:before {
	border-right: 4px solid var(--collColor);
}

@-webkit-keyframes monitor-flicker{
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-256px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes explosion{
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-320px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes ringSpin{
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-256px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes ringTwinkle{
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-256px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes starPostActive{
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-32px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes coinTwinkle{
	from{
		background-position: var(--sprite-offset-x) var(--sprite-offset-y);
	}
	to{
		background-position: calc(-386px + var(--sprite-offset-x)) var(--sprite-offset-y);
	}
}

@-webkit-keyframes spin{
	from{
		transform: rotate(0deg);
	}
	to{
		transform: rotate(-360deg);
	}
}


@-webkit-keyframes spin2x{
	from{
		transform: rotate(0deg);
	}
	to{
		transform: rotate(-720deg);
	}
}
